Функционал проекта «Пицца»
Функциональность проекта пиццы будет включать возможность создавать, читать, обновлять и удалять (CRUD) записи как для пиццы, так и для кафе. Функциональность будет защищена, если для доступа к этим функциям потребуется имя пользователя «admin».
Pizza CRUD: пользователи с именем «admin» смогут создавать новые записи о пицце, предоставляя такую информацию, как название пиццы, размер, key_ingredients, cafe_id. Они также смогут просматривать, обновлять и удалять существующие записи о пицце.
Cafe CRUD: пользователи с именем пользователя «admin» смогут создавать новые записи о кафе, предоставляя такую информацию, как название кафе, местоположение и телефон. Они также смогут просматривать, обновлять и удалять существующие записи о кафе.
Запросы POST, DELETE и PUT: пользователи с именем пользователя «admin» смогут создавать новые ресурсы, отправляя запрос POST, удалять существующие ресурсы, отправляя запрос DELETE, и обновлять существующие ресурсы, отправляя запрос PUT.
GET работает для всех.
Безопасность: приложение будет защищено за счет запроса имени пользователя «admin» для доступа к функциям пиццы и кафе CRUD, а также запросам POST, DELETE и PUT. Это можно реализовать с помощью Spring Security, который будет проверять учетные данные пользователя и ограничивать доступ к определенным частям приложения в зависимости от его роли.
Приложение также будет иметь возможность извлекать все пиццы, извлекать определенную пиццу, извлекать все кафе, извлекать конкретное кафе и т. д. (все функции вы можете найти здесь->https://docs.google.com/document). /d/1d634J1H5YcM2TPcX8iCWfT5-SL1RmdlUt3hV3Xrp-F4/edit?usp=совместное использование)
Cafe to Pizza имеет двустороннюю связь @OneToMany. Это означает, что в одном кафе может быть несколько пицц, но каждая пицца может принадлежать только одному кафе.
Добавьте программно несколько пицц и кафе. Для этого создайте класс

Таблица "Пиццерии" с полями:
id - выявление идентификатора пиццерии (тип данных int);
address - адрес пиццерии (тип данных String);
city ​​- город, в котором расположена пиццерия (тип данных String);
email - адрес электронной почты пиццерии (тип данных String);
phone - номер телефона пиццерии (тип данных String);
time_open - время открытия пиццерии (тип данных Time);
time_close - время закрытия пиццерии (тип данных Time).
Таблица "Меню" с полями:
id - выявление идентификатора карты (тип данных int);
name - название блюда (тип данных String);
тип - тип блюда (пицца, напиток, салат) (тип данных Строка);
ингредиенты - ингредиенты, которые входят в состав блюда (тип данных String);
pizzeria_id - идентификатор пиццерии, к которому относятся представители (тип данных int).
Дополнительно можно создать таблицу "Ингредиенты" с полями:
id - выявление аллергии (тип данных int);
name - название ингредиента (тип данных String).
Далее можно создать таблицу "Menu_Ingredients" для соединения блюд с ингредиентами:
menu_id - идентификатор блюда (тип данных int);
ингридиент_ид - идентификатор ингредиента (тип данных int).
Таким образом, можно хранить данные о пиццериях, их меню и ингредиентах, которые включаются в блюда, часто в таблицы и связывают их по идентификаторам. Это требует более надежной работы с данными и использования выборки.


Pizzerias                Menu                      Ingredients             Menu_Ingredients
+----+------------------+   +----+----------------+  +----+--------+   +---------+-----------+
| id | address          |   | id | name           |  | id | name   |   | menu_id | ingredient_id |
+----+------------------+   +----+----------------+  +----+--------+   +---------+-----------+
| 1  | Pizzeria 1       |   | 1  | Pizza 1        |  | 1  | Tomato |   | 1       | 1             |
| 2  | Pizzeria 2       |   | 2  | Pizza 2        |  | 2  | Cheese |   | 1       | 2             |
| 3  | Pizzeria 3       |   | 3  | Drink 1        |  | 3  | Onion  |   | 2       | 1             |
+----+------------------+   | 4  | Salad 1        |  +----+--------+   | 3       | 3             |
                            +------------------+                      | 3       | 4             |
                                                                      +---------+-----------+


 схема связей между таблицами:


Pizzerias                Menu                      Ingredients             Menu_Ingredients
+----+------------------+   +----+----------------+  +----+--------+   +---------+-----------+
| id | address          |   | id | name           |  | id | name   |   | menu_id | ingredient_id |
+----+------------------+   +----+----------------+  +----+--------+   +---------+-----------+
| 1  | Pizzeria 1       |   | 1  | Pizza 1        |  | 1  | Tomato |   | 1       | 1             |
| 2  | Pizzeria 2       |   | 2  | Pizza 2        |  | 2  | Cheese |   | 1       | 2             |
| 3  | Pizzeria 3       |   | 3  | Drink 1        |  | 3  | Onion  |   | 2       | 1             |
+----+------------------+   | 4  | Salad 1        |  +----+--------+   | 3       | 3             |
                            +------------------+                      | 3       | 4             |
                                                                      +---------+-----------+
В этой таблице представлена ​​четыре таблицы: "Пиццерии" (Пиццерии), "Меню" (Меню), "Ингредиенты" (Ингредиенты) и "Меню_Ингредиенты" (связь Меню и Ингредиентов).

В таблице "Пиццерии" указаны данные о пиццериях, такие как административный идентификатор (id), адрес, город, электронная почта, номер телефона, время открытия и закрытия.
В таблице "Меню" содержится информация о блюдах, их идентификатор, название, тип (пицца, напиток, салат) и ингредиенты, которые входят в каждое блюдо. Колонка "pizzeria_id" связывает меню с конкретной пиццерией.
В таблице "Ингредиенты" присутствуют данные об ингредиентах, их действие и идентификатор.
В таблице "Menu_Ingredients" приведены сведения о соединении между блюдами и ингредиентами. Колонка "menu_id" содержит идентификатор блюда из таблицы "Меню", а "ingredient_id" - идентификатор ингредиента из таблицы "Ингредиенты".